!function(){'use strict';var c=35,f=46,g=0,h=1,i=2,j=function(a){var b=null,d=null,e=null,j=g,k=0;for(var l=0;l<=a.length;l++){var m=a.charCodeAt(l),n=m===c,o=m===f,p=!m;(n||o||p)&&(j===g?(l===0?(b='div'):(b=a.substring(k,l))):j===h?(d=a.substring(k,l)):e?(e+=' '+a.substring(k,l)):(e=a.substring(k,l)),n?(j=h):o&&(j=i),k=l+1)}return{tag:b,id:d,className:e}},k=function(a,b){var c=j(a),d=c.tag,e=c.id,f=c.className,g=b?document.createElementNS(b,d):document.createElement(d);e&&(g.id=e);f&&(b?g.setAttribute('class',f):(g.className=f));return g},l=function(a,b){var c=A(a),d=A(b);b===d&&d.__redom_view&&(b=d.__redom_view);d.parentNode&&(m(b,d,c),c.removeChild(d));return b},m=function(a,b,c){var d=b.__redom_lifecycle;if(n(d)){b.__redom_mounted=!1;return}var e=c;b.__redom_mounted&&s(b,'onunmount');while(e){var f=e.__redom_lifecycle||{};for(var g in d)f[g]&&(f[g]-=d[g]);n(f)&&(e.__redom_lifecycle=null);e=e.parentNode}},n=function(a){if(a==null){return !0}for(var b in a){if(a[b]){return !1}}return !0},o=['onmount','onunmount'],p=typeof window!=='undefined'&&'ShadowRoot' in window,q=function(a,b,c){var d=A(a),e=A(b);b===e&&e.__redom_view&&(b=e.__redom_view);b!==e&&(e.__redom_view=b);var f=e.__redom_mounted,g=e.parentNode;f&&g!==d&&m(b,e,g);c!=null?d.insertBefore(e,A(c)):d.appendChild(e);r(b,e,d,g);return b},r=function(a,b,c,d){var e=b.__redom_lifecycle||(b.__redom_lifecycle={}),f=c===d,g=!1;for(var h=0;h<o.length;h++){var i=o[h];!f&&a!==b&&i in a&&(e[i]=(e[i]||0)+1);e[i]&&(g=!0)}if(!g){b.__redom_mounted=!0;return}var j=c,k=!1;(f||!k&&(j&&j.__redom_mounted))&&(s(b,f?'onremount':'onmount'),k=!0);if(f){return}while(j){var l=j.parentNode,m=j.__redom_lifecycle||(j.__redom_lifecycle={});for(var n in e)m[n]=(m[n]||0)+e[n];!k&&(j===document||p&&j instanceof window.ShadowRoot||l&&l.__redom_mounted)&&(s(j,f?'onremount':'onmount'),k=!0);j=l}},s=function(a,b){b==='onmount'?(a.__redom_mounted=!0):b==='onunmount'&&(a.__redom_mounted=!1);var c=a.__redom_lifecycle;if(!c){return}var d=a.__redom_view,e=0;d&&d[b]&&d[b]();for(var f in c)f&&e++;if(e){var g=a.firstChild;while(g){var h=g.nextSibling;s(g,b);g=h}}},t=function(a,b,c){var d=A(a);if(c!==undefined)d.style[b]=c;else if(B(b))d.setAttribute('style',b);else{for(var e in b)t(d,e,b[e])}},u='http://www.w3.org/1999/xlink',v=function(a,b,c){var d=A(a),e=d instanceof SVGElement;if(c!==undefined){if(b==='style')t(d,c);else if(e&&D(c))d[b]=c;else if(b==='dataset')x(d,c);else if(!e&&(b in d||D(c)))d[b]=c;else{if(e&&b==='xlink'){w(d,c);return}d.setAttribute(b,c)}}else{for(var f in b)v(d,f,b[f])}};function w(a,b){for(var c in b)a.setAttributeNS(u,c,b[c])}function x(a,b){for(var c in b)a.dataset[c]=b[c]}var y=function(a){return document.createTextNode(a!=null?a:'')},z=function(a,b){for(var c=0;c<b.length;c++){var d=b[c];if(d!==0&&!d){continue}typeof d==='function'?d(a):B(d)||C(d)?a.appendChild(y(d)):E(A(d))?q(a,d):d.length?z(a,d):typeof d==='object'&&v(a,d)}},A=function(a){return a.nodeType&&a||!a.el&&a||A(a.el)},B=function(a){return typeof a==='string'},C=function(a){return typeof a==='number'},D=function(a){return typeof a==='function'},E=function(a){return a&&a.nodeType},F={},G=function(a){return F[a]||(F[a]=k(a))},H=function(a){var b=arguments,c=[],d=arguments.length-1;while(d-->0)c[d]=b[d+1];var e;if(B(a))e=G(a).cloneNode(!1);else if(E(a))e=a.cloneNode(!1);else if(D(a)){var f=a;e=new (Function.prototype.bind.apply(f,[null].concat(c)))}else{throw new Error('At least one argument required')};z(A(e),c);return e};H.extend=function(a){var b=arguments,c=[],d=arguments.length-1;while(d-->0)c[d]=b[d+1];var e=G(a);return H.bind.apply(H,[this,e].concat(c))};var I=H,J=function(a){var b=arguments,c=[],d=arguments.length-1;while(d-->0)c[d]=b[d+1];var e=A(a),f=K(a,c,e.firstChild);while(f){var g=f.nextSibling;l(a,f);f=g}};function K(a,b,c){var d=c;for(var e=0;e<b.length;e++){var f=b[e];if(!f){continue}var g=A(f);if(g===d){d=d.nextSibling;continue}if(E(g)){q(a,f,d);continue}f.length!=null&&(d=K(a,f,d))}return d}var L=function(a,b){var c=a.el||a,d=function(a){var c=a.detail,d=c.type,e=c.data;b[d]&&b[d](e)};c.addEventListener('redom',d);return{destroy:function a(){c.removeEventListener('redom',d)}}};function M(a,b){typeof a==='string'&&(a=new Date(a));var c=new Date(a),d=a.getDate()+parseInt(b);c.setDate(d);return c}function N(a,b){var c=new Date(a),d=new Date(b);return Math.round((c.getTime()-d.getTime())/86400000)}function O(a){typeof a==='string'&&(a=new Date(a));return a}function P(a,b){if((""+a).indexOf('.')===-1){return parseFloat(parseFloat(a).toFixed(b||0))}return parseFloat(parseFloat(a).toFixed(b||0))}function Q(a,b){b===void 0&&(b='$');return""+b+(parseFloat(a).toFixed(2))}function R(a){if(typeof a==='string'){return a===''}for(var b in a){if(a.hasOwnProperty(b)){return !1}}return !0}function S(a,b,c,d){if(!Array.isArray(b)){if(typeof b==='string')b=[b];else{throw new Error('Validators should be a string or array.')}}var e=typeof a!=='undefined',f=b.reduce(function(b,f){switch(f){case 'required':a||(b.required=!0);break;case 'pattern':var j=c&&c.patter;(!j||new RegExp(j).test(a)===!1)&&(b.pattern=!0);break;case 'number':(!e||isNaN(a))&&(b.number=!0);break;case 'date':e||(b.date=!0);if(!a instanceof Date){var i=Date.parse(a);isNaN(i)&&(b.date=!0)};break;case 'min':e&&!isNaN(a)&&(parseFloat(a)<parseFloat(c&&c.min||'0')&&(b.min=!0));break;case 'max':e&&!isNaN(a)&&(parseFloat(a)>parseFloat(c&&c.max||'0')&&(b.max=!0));break;case 'gt':if(e){h=d&&d[c&&c.gt];(!h||parseFloat(h)>parseFloat(a))&&(b.gt=!0)};break;case 'lt':if(e){h=d&&d[c&&c.lt];(!h||parseFloat(h)<parseFloat(a))&&(b.lt=!0)};break;case 'not':if(e){var h=d&&d[c&&c.not];h===a&&(b.not=!0)};break;case 'oneOf':if(e){var g=c&&c.oneOf;typeof g==='string'&&(g=g.split(','));'indexOf' in g&&g.indexOf(a)===-1&&(b.oneOf=!0)};break};return b},{});return f}function T(){Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector)}function U(a,b){T();var c=a.nextElementSibling;if(!b){return c}while(c){if(c.matches(b)){return c}c=c.nextElementSibling}return null}var V=function(a){if(typeof a==='undefined'){return''}var b=new Date(a),c=("0"+(b.getDate())).slice(-2),d=("0"+(b.getMonth()+1)).slice(-2),e=b.getFullYear();return e+"-"+d+"-"+c},W=function(a){return Object.keys(a||{}).reduce(function(b,c){var d=a[c];d.default&&(b[c]=typeof d.default==='function'?d.default(b):d.default);return b},{})},X=function(a){a===void 0&&(a='app');var b=function(a){if(typeof a==='function'){return a()}return a},c=function(a,b){a.addEventListener('change',b.change);a.addEventListener('keydown',b.keydown);return a},e={'text':function(a,c,d){return I(("input."+d),{id:a,type:'text',name:a,value:c.default?b(c.default):''})},'number':function(a,c,d){return I(("input."+d),{id:a,type:'number',name:a,value:c.default?b(c.default):''})},'select':function(a,b,c){return I(("select."+c),{id:a,name:a},[].concat(f(b,b.default||'')))},'date':function(a,c,d){return I(("input."+d),{id:a,type:'date',name:a,value:c.default?V(b(c.default)):V(new Date())})}},f=function(a,b){var c=a.options||[];return c.reduce(function(a,c){var d=I('option',{value:c.value||c,textContent:c.text||c});b==c.value&&d.setAttribute('selected',!0);a.push(d);return a},[])},g=function(a,b,d){var f={elements:[],submit:null,cancel:null},g=a&&a.inputs||{},h=a&&a.helpText||{};Object.keys(g).forEach(function(a){var i=g[a];i.label&&f.elements.push(I(("label."+d.label),{htmlFor:a,textContent:i.label}));e[i.type]?f.elements.push(c(e[i.type](a,i,d.control),b)):f.elements.push(c(elementsTypes.text(a,i,d.control),b));f.elements.push(I(("."+d.errorMessage),{style:{display:'none'},dataset:{'for':a}}));h[a]&&f.elements.push(I(("."+d.helpText),y(h[a])))});f.submit=I(("input."+d.submit),{type:'submit',textContent:'Calculate',onclick:b.submit});f.cancel=I(("button."+d.cancel),{innerHTML:'Cancel',onclick:b.cancel});return f},h=function c(b){this.calculator=b;this.data=W(b.inputs);this.handlers={submit:[],cancel:[],change:[]};this.submitted=!1;this.classNameList={'form':a+"-calc-form",'header':a+"-calc-form__header",'title':a+"-calc-form__title",'description':a+"-calc-form__description",'label':a+"-calc-form__label",'control':a+"-calc-form__control",'submit':a+"-calc-form__submit-action",'cancel':a+"-calc-form__cancel-action",'error':a+"-has-errors",'success':a+"-is-valid",'errorMessage':a+"-calc-form__error-message",'helpText':a+"-calc-form__help-text"};this.el=I(("."+a+"-calc-form__wrapper"))};h.prototype.reset=function a(){var b=this;this.data=W(this.calculator.inputs);this.submitted=!1;Array.prototype.forEach.call(this.el.querySelectorAll(("."+this.classNameList.control)),function(a){a.classList.remove(b.classNameList.success);a.classList.remove(b.classNameList.error);a.value=''});Array.prototype.forEach.call(this.el.querySelectorAll(("."+this.classNameList.errorMessage)),function(a){a.style.display='none';a.innerHTML=''});Object.keys(this.data||{}).forEach(function(a){var c=b.el.querySelector(("[name=\""+a+"\"]"));if(c){switch(c.getAttribute('type')){case 'date':c.value=V(b.data[a]);break;default:c.value=b.data[a];break}}})};h.prototype.onSubmit=function b(a){var c=this;a&&a.preventDefault();this.submitted=!0;var d=this.calculator.calculator(this.data);this.validate(Object.keys(this.calculator.inputs),d);if(d.errors&&d.errors.count){return}Array.prototype.forEach.call(this.el.querySelectorAll(("."+this.classNameList.control)),function(a){a.classList.remove(c.classNameList.success);a.classList.remove(c.classNameList.error)});this.handlers.submit.forEach(function(a){a(d,function(){return c.reset()})})};h.prototype.onCancel=function a(){var b=this;event&&event.preventDefault();this.handlers.cancel.forEach(function(a){a(function(){return b.reset()})})};h.prototype.onChange=function b(a){var c=this,d=a&&a.target||{},e=d.value,f=d.name;this.data[f]=e;this.handlers.change.forEach(function(a){a(f,e,c.data)});this.validate(f,this.calculator.calculator(this.data))};h.prototype.onKeydown=function b(a){if(a.which===13||a.keyCode===13){a.preventDefault();a.stopPropagation();var c=U(a.target,("."+this.classNameList.control));c?c.focus():(a.target.blur(),this.onSubmit(a));return !1}return !0};h.prototype.validate=function c(a,b){var d=this,e=this.calculator.messages||{},f=a;typeof f==='string'&&(f=[f]);f.forEach(function(a){var c=d.el.querySelector(("[name=\""+a+"\"]"));if(!c||c.style.display==='none'){return}c.classList.remove(d.classNameList.error);c.classList.remove(d.classNameList.success);var f=d.el.querySelector(("."+d.classNameList.errorMessage+"[data-for=\""+a+"\"]"));f&&(f.style.display='none',f.textContent='');if(!b.errors||!b.errors[a]){c.classList.add(d.classNameList.success);return}c.classList.add(d.classNameList.error);var g=Object.keys(b.errors[a]||{}).reduce(function(b,c){e[a]&&e[a][c]&&b.push(e[a][c]);return b},[]);f&&g.length&&(f.style.display='block',f.innerHTML=g.join('<br />'))})};h.prototype.listen=function c(a,b){if(!this.handlers[a]){throw new Error(("'"+a+"' is not supported. Allowed events are submit, cancel and change."))}if(typeof b!=='function'){throw new Error(("Expected listen handler to be a function. Received '"+typeof b+"'."))}this.handlers[a].push(b);return this};h.prototype.header=function b(a){this.customHeader=a;return this};h.prototype.build=function b(a){var c=a||{},d=c.submitText,e=c.cancelText,f=c.noCancel,h=c.noHeader,i=c.classNames,j=c.noValidate,k=c.title,l=c.description;i&&(this.classNameList=Object.assign({},this.classNameList,i));this.formObj=g(this.calculator,{'submit':this.onSubmit.bind(this),'cancel':this.onCancel.bind(this),'change':this.onChange.bind(this),'keydown':this.onKeydown.bind(this)},this.classNameList);d&&(this.formObj.submit.value=d);e&&(this.formObj.cancel.textContent=e);this.headerEl=!!h?I('div'):I(("."+this.classNameList.header),[this.titleEl=I(("h4."+this.classNameList.title),k||this.calculator.name),this.descriptionEl=I(("p."+this.classNameList.description),l||this.calculator.description)]);var m=[this.customHeader||this.headerEl].concat(this.formObj.elements);f||m.push(this.formObj.cancel);m.push(this.formObj.submit);this.form?J(this.form,m):(this.form=I(("form."+this.classNameList.form),{onsubmit:this.onSubmit.bind(this)},m),this.el.appendChild(this.form));j&&this.form.setAttribute('novalidate',!0);return this};return{CalculatorForm:h}},Y=function(a,b){b===void 0&&(b="/");var c=new Date(a),d=c.getDate(),e=c.getMonth()+1,f=c.getFullYear();return""+e+b+d+b+f},Z=function(a){a===void 0&&(a="app");var b=function(a,b){switch(b.type){case "date":return Y(a,b.separator);case "number":return(parseFloat((""+a)).toFixed(b.precision||0))+" "+(b.units||"");default:return a}},c=function c(b){this.calculator=b;this.excludes=[];this.el=I(("."+a+"-calc-results"));this.includeInputs=!1};c.prototype.update=function d(c){var e=this,f=c.reset,g=c.results;f&&(g||(this.el.innerHTML=""));if(g){this.results=g;this.el.innerHTML="";console.log(this.calculator,g);var h;Object.keys(this.calculator.outputs).forEach(function(c){if(e.excludes.indexOf(c)!==-1){return}var d=e.calculator.outputs[c],f=g[c];e.calculator.formatters&&e.calculator.formatters[c]?(f=e.calculator.formatters[c](g[c])):e.formatFn?(f=e.formatFn(g[c],d)):(f=b(g[c],d));h=I(("p."+a+"-calc-results__item."+a+"-calc-results__item--output"),[I("span",y((d.label+":"))),y(f)]);e.el.appendChild(h)});this.includeInputs&&Object.keys(this.calculator.inputs).forEach(function(c){if(e.excludes.indexOf(c)!==-1){return}var d=e.calculator.inputs[c],f=g[c];e.calculator.formatters&&e.calculator.formatters[c]?(f=e.calculator.formatters[c](g[c])):e.formatFn?(f=e.formatFn(g[c],d)):(f=b(g[c],d));h=I(("p."+a+"-calc-results__item."+a+"-calc-results__item--input"),[I("span",y((d.label+":"))),y(f)]);e.el.appendChild(h)})}};c.prototype.useFormatter=function b(a){if(typeof a!=="function"){throw new Error("formatter must be a function.")}this.formatFn=a;return this};c.prototype.showInputs=function a(){this.includeInputs=!0;return this};c.prototype.exclude=function a(){var b=[],c=arguments.length;while(c--)b[c]=arguments[c];this.excludes=[].concat(b);return this};return{CalculatorResults:c}},_=function(a){if(!a||R(a)){return a}var b=Object.keys(a).reduce(function(b,c){R(a[c])||(b[c]=a[c]);return b},{});return Object.assign({},b,{count:a.count})},$=function(a){if(!a||R(a)){return 0}return Object.keys(a).reduce(function(b,c){R(a[c])||b++;return b},0)};function aa(a){var b=a.breedingDate,c=a.gestation;c===void 0&&(c=283);console.log('breeding date',b);var d={breedingDate:S(b,['required','date']),gestation:S(c,['required','number','min'],{min:1})};d.count=$(d);if(d.count>0){return{errors:_(d)}}var e=parseInt(Math.floor(c/3)),f=[0,e,e*2];return{breedingDate:b,gestation:c,birthingDate:M(b,c),firstPartition:M(b,f[0]),secondPartition:M(b,f[1]),thirdPartition:M(b,f[2]),daysTillBirthing:N(M(b,c),new Date()),daysBred:N(new Date(),b),calculated:new Date(),errors:{count:0}}}function ab(a){var b=a.birthingDate,c=a.gestation;c===void 0&&(c=283);var d={birthingDate:S(b,['required','date']),gestation:S(c,['required','number','min'],{min:1})};d.count=$(d);if(d.count>0){return{errors:_(d)}}var e=parseInt(Math.floor(c/3)),f=[0,e,e*2],g=M(b,-parseInt(c));return{birthingDate:b,gestation:c,breedingDate:g,firstPartition:M(b,f[0]),secondPartition:M(b,f[1]),thirdPartition:M(b,f[2]),daysTillBreeding:N(g,new Date()),calculated:new Date(),errors:{count:0}}}function ac(a){var b=a.startDate,c=a.startWeight,d=a.endWeight,e=a.averageDailyGain,f={startDate:S(b,['required','date']),startWeight:S(c,['required','number','min'],{min:1}),endWeight:S(d,['required','number','min','gt'],{min:1,gt:'startWeight'},{startWeight:c}),averageDailyGain:S(e,['required','number','min'],{min:0})};f.count=$(f);if(f.count>0){return{errors:_(f)}}var g=parseFloat(d)-parseFloat(c),h=parseInt(Math.floor(g/parseFloat(e)));return{startDate:O(b),startWeight:P(c,0),endWeight:P(d,0),averageDailyGain:P(e,2),weightGain:P(g,0),daysOnFeed:h,endDate:M(b,h),calculated:new Date(),errors:{count:0}}}function ad(a){var b=a.headCount,c=a.totalFeedIntake,d=a.feedConversionRate,e=a.startWeight,f={headCount:S(b,['required','min'],{min:1}),totalFeedIntake:S(c,['required','number','min'],{min:1}),feedConversionRate:S(d,['required','number','min'],{min:1}),startWeight:S(e,['required','min'],{min:1})};f.count=$(f);if(f.count>0){return{errors:_(f)}}var g=P(parseFloat(c)/parseInt(b)/parseFloat(d),0),h=P(parseFloat(e)+g,0),i=P(g*parseInt(b),0);return{headCount:P(e,0),totalFeedIntake:P(h,0),feedConversionRate:P(d,1),startWeight:P(e,0),weightGainPerHead:g,endWeight:h,totalWeightGain:i,calculated:new Date(),errors:{count:0}}}function ae(a){var b=a.startWeight,c=a.endWeight,d=a.daysOnFeed,e={startWeight:S(b,['required','number','min'],{min:1}),endWeight:S(b,['required','number','gt'],{gt:'startWeight'},{startWeight:b}),daysOnFeed:S(d,['required','number','min'],{min:1})};e.count=Object.keys(e).reduce(function(a,b){R(e[b])||a++;return a},0);if(e.count>0){return{errors:e}}var f=parseFloat(c)-parseFloat(b),g=f/parseInt(d);return{startWeight:P(b,0),endWeight:P(c,0),daysOnFeed:P(d,0),averageDailyGain:P(g,2),weightGain:P(f,0),calculated:new Date(),errors:{count:0}}}function af(a){var b=a.birthWeight,c=a.ageOfDam,d={birthWeight:S(b,['required','number','min'],{min:1}),ageOfDam:S(c,['required','oneOf'],{oneOf:['2','3','4','5','11']})};d.count=$(d);if(d.count>0){return{errors:_(d)}}var e={'2':8,'3':5,'4':2,'5':0,'11':3},f=e[(""+c)];return{birthWeight:P(b,0),ageOfDam:c,adjustment:P(f,0),adjustedBirthWeight:P(parseFloat(b)+parseFloat(f),0),calculated:new Date(),errors:{count:0}}}function ag(a){var b=a.gender,c=a.birthWeight,d=a.currentWeight,e=a.currentAge,f=a.ageOfDam,g={gender:S(b,['required','oneOf'],{oneOf:['male','female']}),birthWeight:S(c,['required','number','min'],{min:1}),currentWeight:S(d,['required','number','min','gt'],{min:1,gt:'birthWeight'},{birthWeight:c}),currentAge:S(e,['required','number','min','max'],{min:150,max:300}),ageOfDam:S(f,['required','oneOf'],{oneOf:['2','3','4','5','11']})};g.count=$(g);if(g.count>0){return{errors:_(g)}}var h={'2':{male:60,female:54},'3':{male:40,female:36},'4':{male:20,female:18},'5':{male:0,female:0},'11':{male:20,female:18}},i=parseFloat(h[(""+f)][b]),j=parseFloat(d)-parseFloat(c),k=parseFloat(j/parseInt(e)),l=parseFloat(c)+i+k*205;return{gender:b,birthWeight:P(c,0),currentWeight:P(d,0),currentAge:P(e,0),ageOfDam:f,adjustment:P(i,0),adjustedWeaningWeight:P(l,0),averageDailyGain:P(k,2),calculated:new Date(),errors:{count:0}}}function ah(a){var b=a.currentWeight,c=a.currentAge,d=a.adjustedWeaningWeight,e={currentWeight:S(b,['required','number','min'],{min:1}),currentAge:S(c,['required','number','min','max'],{min:250,max:450}),adjustedWeaningWeight:S(d,['required','number'])};e.count=$(e);if(e.count>0){return{errors:_(e)}}var f=parseFloat(b)-parseFloat(d),g=parseFloat(c)-205,h=f/g,i=parseFloat(h)*160+parseFloat(d);return{currentWeight:P(b,0),currentAge:P(c,0),adjustedWeaningWeight:P(d,0),averageDailyGain:P(h,2),adjustedYearlingWeight:P(i,0),calculated:new Date(),errors:{count:0}}}function ai(a){var b=a.femalesExposed,c=a.numberBorn,d=a.numberLost,e={femalesExposed:S(b,['required','number','min'],{min:1}),numberBorn:S(c,['required','number','min'],{min:0}),numberLost:S(d,['required','nunmber','min'],{min:0})};e.count=$(e);if(e.count>0){return{errors:_(e)}}var f=P(d,0)/P(c,0),g=P(d,0)/P(b,0);return{femalesExposed:P(b,0),numberBorn:P(c,0),numberLost:P(d,0),deathLossBorn:P(f*100,1),deathLossExposed:P(g*100,1),calculated:new Date(),errors:{count:0}}}function aj(a){var b=a.breedingSeasonLength,c=a.sireTurnOutDate,d=a.gestation;d===void 0&&(d=283);var e={breedingSeasonLength:S(b,['required','number','min'],{min:1}),sireTurnOutDate:S(c,['required','date']),gestation:S(d,['required','number','min'],{min:1})};e.count=$(e);if(e.count>0){return{errors:_(e)}}var f=M(O(c),parseInt(d)),g=M(f,parseInt(b));return{breedingSeasonLength:P(b,0),sireTurnOutDate:O(c),gestation:P(d),birthingSeasonStart:f,birthingSeasonEnd:g,calculated:new Date(),errors:{count:0}}}function ak(a){var b=a.totalWeightWeaned,c=a.femalesExposed,d={totalWeightWeaned:S(b,['required','number','min'],{min:1}),femalesExposed:S(c,['required','number','min'],{min:1})};d.count=$(d);if(d.count>0){return{errors:_(d)}}var e=parseFloat(b)/parseFloat(c);return{totalWeightWeaned:P(b,0),femalesExposed:P(c,0),weightWeanedPerFemale:P(e,0),calculated:new Date(),errors:{count:0}}}function al(a){var b=a.numberBorn,c=a.numberFemalesExposed,d=a.numberFemalesSoldOrDied,e=a.numberFemalesPurchased,f={numberBorn:S(b,['required','number','min'],{min:0}),numberFemalesExposed:S(c,['required','number','min'],{min:0}),numberFemalesSoldOrDied:S(d,['required','number','min'],{min:0}),numberFemalesPurchased:S(e,['required','number','min'],{min:0})};f.count=$(f);if(f.count>0){return{errors:_(f)}}var g=parseInt(c)-parseInt(d)+parseInt(e),h=g==0?0:parseFloat(b)/parseInt(g)*100;return{numberBorn:P(b,0),numberFemalesExposed:P(c,0),numberFemalesSoldOrDied:P(d,0),numberFemalesPurchased:P(e,0),numberFemalesExposed:P(c,0),birthingPercentage:P(h,1),calculated:new Date(),errors:{count:0}}}function am(a){var b=a.numberWeaned,c=a.numberFemalesExposed,d=a.numberFemalesSoldOrDied,e=a.numberFemalesPurchased,f={numberWeaned:S(b,['required','number','min'],{min:0}),numberFemalesExposed:S(c,['required','number','min'],{min:0}),numberFemalesSoldOrDied:S(d,['required','number','min'],{min:0}),numberFemalesPurchased:S(e,['required','number','min'],{min:0})};f.count=$(f);if(f.count>0){return{errors:_(f)}}var g=parseInt(c)-parseInt(d)+parseInt(e),h=parseInt(g)===0?0:parseFloat(b)/parseInt(g)*100;return{numberWeaned:P(b,0),numberFemalesExposed:P(c,0),numberFemalesSoldOrDied:P(d,0),numberFemalesPurchased:P(e,0),numberFemalesExposed:P(c,0),weaningPercentage:P(h,1),calculated:new Date(),errors:{count:0}}}var an={};an[2]=.85;an[3]=.90;an[4]=.95;an[5]=.95;an[6]=.95;an[7]=.95;an[8]=.95;an[9]=.90;an[10]=.90;an[11]=.90;function ao(a){var b=a.herdSize,c=a.replacementRate,d={herdSize:S(b,['required','number','min'],{min:1}),replacementRate:S(c,['required','number','min'],{min:0})};d.count=$(d);if(d.count>0){return{errors:_(d)}}var e=0,f=0,g=parseFloat(c)/100;for(var h in an){if(an.hasOwnProperty(h)){var i=parseFloat(an[h]);if(e===0)f=i*g,e=f*parseInt(h);else{var j=f;f=j*i;e+=f*parseInt(h)}}}var k=Math.ceil(g*b);return{herdSize:P(b,0),replacementRate:P(c,0),averageCowAge:P(e,0),replacementsNeeded:P(k,0),calculated:new Date(),errors:{count:0}}}function ap(a){var b=a.startWeight,c=a.endWeight,d=a.daysOnFeed,e=a.totalFeedCost,f={daysOnFeed:S(d,['required','number','min'],{min:1}),totalFeedCost:S(e,['required','number','min'],{min:0}),startWeight:S(b,['required','number','min'],{min:1}),endWeight:S(c,['required','number','gt'],{gt:'startWeight'},{startWeight:b})};f.count=$(f);if(f.count>0){return{errors:_(f)}}var g=parseInt(c)-parseInt(b),h=P(g/parseInt(d),2),i=parseFloat(e)/parseFloat(g),j=parseFloat(h)*parseFloat(i);return{daysOnFeed:P(d,0),totalFeedCost:P(e,2),startWeight:P(b,0),endWeight:P(c,0),totalWeightGain:P(g,0),averageDailyGain:P(h,2),feedCostPerWeight:P(i,2),feedCostPerDay:P(j,2),calculated:new Date(),errors:{count:0}}}var aq=[{text:'Male',value:'male'},{text:'Female',value:'female'}],ar=aq.reduce(function(a,b){a[b.value]=b.text;return a},{}),as=[{text:'2 Years Old',value:'2'},{text:'3 Years Old',value:'3'},{text:'4 Years Old',value:'4'},{text:'5 - 10 Years Old',value:'5'},{text:'11 Years and Older',value:'11'}],at=as.reduce(function(a,b){a[b.value]=b.text;return a},{}),au=[{text:'Chicken - 21 Days',value:21},{text:'Cow - 283 Days',value:283},{text:'Ewe - 147 Days',value:147},{text:'Goat - 150 Days',value:150},{text:'Heifer - 279 Days',value:279},{text:'Mare - 342 Days',value:342},{text:'Sow - 114 Days',value:114}],av=au.reduce(function(a,b){a[b.value]=b.text;return a},{}),aw={id:'birthing-date',name:'Birthing Date',category:'livestock',description:'Calculates a birthing date from a given breeding date.',inputs:{breedingDate:{type:'date',label:'Breeding Date',validators:['required','date'],default:function(){return new Date()}},gestation:{type:'select',label:'Gestation',validators:['required','number','min'],params:{min:1},options:au,default:283}},outputs:{birthingDate:{type:'date',label:'Birthing Date'},firstPartition:{type:'date',label:'First Partition'},secondPartition:{type:'date',label:'Second Partition'},thirdPartition:{type:'date',label:'Third Partition'},daysTillBirthing:{type:'number',label:'Days until Birthing'},daysBred:{type:'number',label:'Days Bred'},calculated:{type:'date',label:'Calculated Date'}},calculator:aa,messages:{breedingDate:{required:'Breeding date is required',date:'Breeding date must be a valid date'},gestation:{required:'Gestation is required',number:'Gestation must be a number',min:'Gestation must be greater than zero.'}},formatters:{gestation:function(a){return av[a]}},calendar:{birthingDate:function(a){var b=a.birthingDate;return({subject:'Birthing Date',from:b})},firstPartition:function(a){var b=a.firstPartition;return({subject:'Birthing First Partition',from:b})},secondPartition:function(a){var b=a.secondPartition;return({subject:'Birthing Second Partition',from:b})},thirdPartition:function(a){var b=a.thirdPartition;return({subject:'Birthing Third Partition',from:b})}}},ax={id:'breeding-date',name:'Breeding Date',description:'Calculates a breeding date from a given birthing date.',category:'livestock',inputs:{birthingDate:{type:'date',label:'Birthing Date',validators:['required','date'],default:function(){return new Date()}},gestation:{type:'select',label:'Gestation',validators:['required'],default:283,options:[{text:'Chicken - 21 Days',value:21},{text:'Cow - 283 Days',value:283},{text:'Ewe - 147 Days',value:147},{text:'Goat - 150 Days',value:150},{text:'Heifer - 279 Days',value:279},{text:'Mare - 342 Days',value:342},{text:'Sow - 114 Days',value:114}]}},outputs:{breedingDate:{type:'date',label:'Breeding Date'},firstPartition:{type:'date',label:'First Partition'},secondPartition:{type:'date',label:'Second Partition'},thirdPartition:{type:'date',label:'Third Partition'},daysTillBreeding:{type:'number',label:'Days until Breeding'},calculated:{type:'date',label:'Calculated Date'}},calculator:ab,messages:{birthingDate:{required:'Birthing date is required',date:'Birthing date must be a valid date'},gestation:{required:'Gestation is required.',min:'Gestation must be greater than zero.'}},calendar:{breedingDate:function(a){var b=a.breedingDate;return({subject:'Breeding Date',from:b})}}},ay={id:'days-on-feed',name:'Days on Feed',description:'Calculates the average number of days on feed based on average daily gain.',inputs:{startDate:{type:'date',label:'Start Date',validators:['required','date'],default:function(){return new Date()}},startWeight:{type:'number',label:'Starting Weight',units:'lbs',validators:['required','min'],params:{min:1}},endWeight:{type:'number',label:'Ending Weight',units:'lbs',validators:['required','min','gt'],params:{min:1,gt:'startWeight'}},averageDailyGain:{type:'number',label:'Average Daily Gain',units:'lbs/day',validators:['required','min'],params:{min:0},precision:2}},outputs:{weightGain:{type:'number',label:'Weight Gain',units:'lbs'},daysOnFeed:{type:'number',label:'Days on Feed'},endDate:{type:'date',label:'End Date'},calculated:{type:'date',label:'Calculated Date'}},calculator:ac,messages:{startDate:{required:'Start date is required.',date:'Start date must be a valid date.'},startWeight:{required:'Starting weight is required.',number:'Starting weight must be a number.',min:'Starting weight must be greater than zero.'},endWeight:{required:'Ending weight is required.',number:'Ending weight must be a number.',gt:'Ending weight must be greater than starting weight.'},averageDailyGain:{required:'Average daily gain is required.',number:'Average daily gain must be a number.',min:'Average daily gain must be greater than zero.'}},calendar:{daysOnFeed:function(a){var b=a.startDate,c=a.endDate;return({subject:'Days on Feed',from:b,to:c})}}},az={id:'adj-birth-weight',name:'Adjusted Birth Weight',description:'Calculates an adjusted birth weight based on the age of the dam.',inputs:{birthWeight:{type:'number',label:'Birth Weight',units:'lbs',validators:['required','number','min'],params:{min:1}},ageOfDam:{type:'select',label:'Dam',validators:['required','oneOf'],params:{'oneOf':['2','3','4','5','11']},default:'3',options:as}},outputs:{adjustment:{type:'number',label:'Adjustment',units:'lbs'},adjustedBirthWeight:{type:'number',label:'Adjusted Birth Weight',units:'lbs'},calculated:{type:'date',label:'Calculated Date'}},calculator:af,messages:{birthWeight:{required:'Birth weight is required.',number:'Birth weight must be a number.',min:'Birth weight must be greater than zero.'},ageOfDam:{required:'Dam age is required.',oneOf:'Valid dam age options are 2, 3, 4, 5 (5 -10), or 11 (11+).'}},formatters:{ageOfDam:function(a){return at[a]||a}}},aA={id:'average-daily-gain',name:'Average Daily Gain',description:'Calculates an average daily gain.',inputs:{startWeight:{type:'number',label:'Starting Weight',units:'lbs',validators:['required','number','min'],params:{min:1}},endWeight:{type:'number',label:'Ending Weight',units:'lbs',validators:['required','min','gt'],params:{min:1,gt:'startWeight'}},daysOnFeed:{type:'number',label:'Days on Feed',validators:['required','min'],params:{min:1}}},outputs:{weightGain:{type:'number',label:'Weight Gain',units:'lbs'},averageDailyGain:{type:'number',label:'Average Daily Gain',units:'lbs/day'},calculated:{type:'date',label:'Calculated Date'}},calculator:ae,messages:{startWeight:{required:'Starting weight is required',number:'Starting weight must be a number.',min:'Starting weight must be greater than zero.'},endWeight:{required:'Ending weight is required',number:'Ending weight must be a number.',gt:'End weight must be greater than the starting weight.'},daysOnFeed:{required:'Days on feed is required',number:'Days on feed must be a number',min:'Days on feed must be greater than zero.'}}},aB={id:'adj-weaning-weight',name:'Adjusted 205 Day Weaning Weight',category:'livestock',description:'Calculates an adjusted weaning weight at 204 days based on gender, dam age, current age and weight.',inputs:{gender:{type:'select',label:'Gender',validators:['required','oneOf'],params:{oneOf:['male','female']},default:'male',options:aq},birthWeight:{type:'number',label:'Birth Weight',units:'lbs',validators:['required','number','min'],params:{min:1}},currentWeight:{type:'number',label:'Current Weight',units:'lbs',validators:['required','number','gt'],params:{gt:'birthWeight'}},currentAge:{type:'number',label:'Current Age',validators:['required','number','min','max'],params:{min:150,max:300}},ageOfDam:{type:'select',label:'Age of Dam',validators:['required','oneOf'],params:{'oneOf':['2','3','4','5','11']},default:'3',options:as}},outputs:{adjustment:{type:'number',label:'Adjustment',units:'lbs'},averageDailyGain:{type:'number',label:'Average Daily Gain',units:'lbs/day'},adjustedWeaningWeight:{type:'number',label:'Adjusted 205 Day Weaning Weight',units:'lbs'},calculated:{type:'date',label:'Calculated Date'}},calculator:ag,messages:{gender:{required:'Please provide a gender',oneOf:'Gender must be male or female'},birthWeight:{required:'Birth weight is required.',number:'Birth weight must be a number',min:'Birth weight must be greater than zero.'},currentWeight:{required:'Current weight is required.',number:'Current weight must be a number',min:'Current weight must be greater than the birth weight.'},currentAge:{required:'Current age is required',number:'Current age must be a number',min:'Current age should be between 150 and 300',max:'Current age should be bewtween 150 and 300'},ageOfDam:{required:'Please provide the age of the dam.',oneOf:'Age of dam should be 2, 3, 4, 5 or 11.'}},formatters:{gender:function(a){return ar[a]||a},ageOfDam:function(a){return at[a]||a}}},aC={id:'adj-yearling-weight',name:'Adjusted 365 Day Yearling Weight',category:'livestock',description:'Calculates an adjusted yearling weight at 365 days based on current age, weight and an adjusted weaning weight.',inputs:{currentWeight:{type:'number',label:'Current Weight',units:'lbs',validators:['required','number','gt'],params:{gt:'birthWeight'}},currentAge:{type:'number',label:'Current Age',units:'days',validators:['required','number','min','max'],params:{min:250,max:450}},adjustedWeaningWeight:{type:'number',label:'Adjusted Weaning Weight',units:'lbs',validators:['required','number','min'],params:{min:1}}},outputs:{averageDailyGain:{type:'number',label:'Average Daily Gain',units:'lbs'},adjustedYearlingWeight:{type:'number',label:'Adjusted Yearling Weight',units:'lbs'},calculated:{type:'date',label:'Calculated Date'}},calculator:ah,messages:{currentWeight:{required:'Current weight is required.',number:'Current weight must be a number.'},currentAge:{required:'Current age is required.',number:'Current age must be a number',min:'Current age should be between 250 and 450.',max:'Current age should be bewtween 250 and 450.'},adjustedWeaningWeight:{required:'Adjusted weaning weight is required.',number:'Adjusted weaning weight must be a number.',min:'Adjusted weaning weight should be greater than zero.'}}},aD={id:'death-loss',name:'Death Loss',description:'Calculates born and exposed death loss rates.',inputs:{femalesExposed:{type:'number',label:'Females Exposed',validators:['required','number','min'],params:{min:1}},numberBorn:{type:'number',label:'Number Born Alive',validators:['required','min'],params:{min:0}},numberLost:{type:'number',label:'Number Lost Before Weaning',validators:['required','min'],params:{min:0}}},outputs:{deathLossBorn:{type:'number',label:'Death Loss (born)',units:'%'},deathLossExposed:{type:'number',label:'Death Loss (exposed)',units:'%'},calculated:{type:'date',label:'Calculated Date'}},calculator:ai,messages:{femalesExposed:{required:'Females exposed is required',number:'Females exposed must be a number',min:'Females exposed should be greater than zero'},numberBorn:{required:'Number born is required',number:'Number born must be a number',min:'Number born should be zero or greater.'},numberLost:{required:'Number lost is required',number:'Number lost must be a number',min:'Number lost should be zero or greater.'}}},aE={id:'weight-gain',name:'Weight Gain',description:'Calculates the amount of weight gained based on consumption.',category:'livestock',inputs:{headCount:{type:'number',label:'Head Count',validators:['required','number','min'],params:{min:1}},totalFeedIntake:{type:'number',label:'Total Feed Intake',units:'lbs',validators:['required','number','min'],params:{min:0}},feedConversionRate:{type:'number',label:'Feed Conversion Rate',validators:['required','number','min'],params:{min:1}},startWeight:{type:'number',label:'Starting Weight',units:'lbs',validators:['required','number','min'],params:{min:1}}},outputs:{weightGainPerHead:{type:'number',label:'Weight Gained per Head',units:'lbs'},totalWeightGain:{type:'number',label:'Total Weight Gain',units:'lbs'},endWeight:{type:'number',label:'Ending Weight',units:'lbs'},calculated:{type:'date',label:'Calculated Date'}},calculator:ad,messages:{headCount:{required:'Head count is required',number:'Head count must be a number',min:'Head count should be greater than zero'},totalFeedIntake:{required:'Total feed intake is required',number:'Total feed intake must be a number',min:'Total feed intake should be zero or greater.'},feedConversionRate:{required:'Feed conversion rate is required',number:'Feed conversion rate must be a number',min:'Feed conversion rate should be greater than zero.'},startWeight:{required:'Starting weight is required',number:'Starting weight must be a number',min:'Starting weight should be greater than zero.'}},formatters:{feedConversionRate:function(a){return a+":1"}}},aF={id:'birthing-season',name:'Birthing Season',description:'Calculates the start and end dates for a birthing season based on a sire turn-out date.',category:'livestock',inputs:{sireTurnOutDate:{type:'date',label:'Sire Turn Out Date',validators:['required','date'],default:function(){return new Date()}},breedingSeasonLength:{type:'number',label:'Breeding Season Length',validators:['required','number','min'],params:{min:1}},gestation:{type:'select',label:'Gestation',validators:['required','min'],params:{min:1},default:283,options:au}},outputs:{birthingSeasonStart:{type:'date',label:'Birthing Season Start'},birthingSeasonEnd:{type:'date',label:'Birthing Season End'},calculated:{type:'date',label:'Calculated Date'}},calculator:aj,messages:{sireTurnOutDate:{required:'Sire turn out date is required',date:'Sire turn out date must be a valid date'},breedingSeasonLength:{required:'Breeding season length is required',number:'Breeding season length must be a number',min:'Breeding season length must be greater than zero'},gestation:{required:'Gestation is required',number:'Gestation must be a number',min:'Gestation must be greater than zero'}},formatters:{gestation:function(a){return av[a]||a}},calendar:{birthingSeason:function(a){var b=a.birthingSeasonStart,c=a.birthingSeasonEnd;return({subject:'Birthing Season',from:b,to:c})}}},aG={id:'weight-weaned',name:'Weight Weaned',description:'Calculates the amount of weight weaned per female.',category:'livestock',inputs:{totalWeightWeaned:{type:'number',label:'Total Weight Weaned',units:'lbs',validators:['required','number','min'],params:{min:1}},femalesExposed:{type:'number',label:'Number of Exposed Females',validators:['required','number','min'],params:{min:1}}},outputs:{weightWeanedPerFemale:{type:'number',label:'Weight Weaned per Female',units:'lbs'},calculated:{type:'date',label:'Calculated Date'}},calculator:ak,messages:{totalWeightWeaned:{required:'Total weight weaned is required',number:'Total weight weaned must be a number',min:'Total weight weaned should be greater than zero'},femalesExposed:{required:'Number of exposed females is required',number:'Number of exposed females must be a number',min:'Number of exposed females should be greater than zero'}}},aH={id:'birthing-percentage',name:'Birthing Percentage',description:'Calculates a birthing percentage.',category:'livestock',inputs:{numberBorn:{type:'number',label:'Number Offspring Born',validators:['required','number','min'],params:{min:0}},numberFemalesExposed:{type:'number',label:'Number of Females Exposed',validators:['required','number','min'],params:{min:0}},numberFemalesSoldOrDied:{type:'number',label:'Number of Females Sold or Died',validators:['required','number','min'],params:{min:0}},numberFemalesPurchased:{type:'number',label:'Number of Females Purchased',validators:['required','number','min'],params:{min:0}}},outputs:{birthingPercentage:{type:'number',label:'Birthing Percentage',units:'%'},calculated:{type:'date',label:'Calculated Date'}},calculator:al,messages:{numberBorn:{required:'Number of offspring born is required',number:'Number of offspring born must be a number',min:'Number of offspring born should be zero or greater'},numberFemalesExposed:{required:'Number of females exposed is required',number:'Number of females exposed must be a number',min:'Number of females exposed should be zero or greater'},numberFemalesSoldOrDied:{required:'Number of females sold or died is required',number:'Number of females sold or died must be a number',min:'Number of females sold or died should be zero or greater'},numberFemalesPurchased:{required:'Number of females purchased is required',number:'Number of females purchased must be a number',min:'Number of females purchased should be zero or greater'}}},aI={id:'weaning-percentage',name:'Weaning Percentage',description:'Calculates a weaning percentage.',category:'livestock',inputs:{numberWeaned:{type:'number',label:'Number of Offspring Weaned',validators:['required','number','min'],params:{min:0}},numberFemalesExposed:{type:'number',label:'Number of Females Exposed',validators:['required','number','min'],params:{min:0}},numberFemalesSoldOrDied:{type:'number',label:'Number of Females Sold or Died',validators:['required','number','min'],params:{min:0}},numberFemalesPurchased:{type:'number',label:'Number of Females Purchased',validators:['required','number','min'],params:{min:0}}},outputs:{weaningPercentage:{type:'number',label:'Weaning Percentage',units:'%'},calculated:{type:'date',label:'Calculated Date'}},calculator:am,messages:{numberWeaned:{required:'Number of offspring weaned is required',number:'Number of offspring weaned must be a number',min:'Number of offspring weaned should be zero or greater'},numberFemalesExposed:{required:'Number of females exposed is required',number:'Number of females exposed must be a number',min:'Number of females exposed should be zero or greater'},numberFemalesSoldOrDied:{required:'Number of females sold or died is required',number:'Number of females sold or died must be a number',min:'Number of females sold or died should be zero or greater'},numberFemalesPurchased:{required:'Number of females purchased is required',number:'Number of females purchased must be a number',min:'Number of females purchased should be zero or greater'}}},aJ={id:'cattle-replacements-needed',name:'Cattle Replacements Needed',description:'Calculates the number of replacements required using a replacement rate.',category:'livestock',inputs:{herdSize:{type:'number',label:'Herd Size',validators:['required','number','min'],params:{min:1}},replacementRate:{type:'number',label:'Replacement Rate',units:'%',validators:['required','number','min'],params:{min:0}}},outputs:{averageCowAge:{type:'number',label:'Average Female Age'},replacementsNeeded:{type:'number',label:'Replacements Needed'},calculated:{type:'date',label:'Calculated Date'}},calculator:ao,messages:{herdSize:{required:'Herd size is required.',number:'Herd size must be a number',min:'Herd size should be greater than zero.'},replacementRate:{required:'Replacement rate is required.',number:'Replacement rate must be a number',min:'Replacement rate should be zero or greater.'}}},aK={id:'feed-cost',name:'Feed Cost',description:'Calculates the cost of feed per weight and day based on total feed costs.',category:'livestock',inputs:{startWeight:{type:'number',label:'Starting Weight',units:'lbs',validators:['required','number','min'],params:{min:1}},endWeight:{type:'number',label:'Ending Weight',units:'lbs',validators:['required','number','gt'],params:{gt:'startWeight'}},daysOnFeed:{type:'number',label:'Days on Feed',validators:['required','number','min'],params:{min:1}},totalFeedCost:{type:'number',label:'Total Feed Cost',validators:['required','number','min'],params:{min:0}}},outputs:{totalWeightGain:{type:'number',label:'Total Weight Gain',units:'lbs'},averageDailyGain:{type:'number',label:'Average Daily Gain',units:'lbs/day'},feedCostPerWeight:{type:'number',label:'Feed Cost per Weight'},feedCostPerDay:{type:'date',label:'Feed Cost per Day'}},calculator:ap,messages:{startWeight:{required:'Starting weight is required',number:'Starting weight must be a number',min:'Starting weight should be greater than zero.'},endWeight:{required:'Ending weight is required',number:'Ending weight must be a number',gt:'Ending weight should be greater than the starting weight.'},daysOnFeed:{required:'Days on feed is required',number:'Days on feed must be a number',min:'Days on feed should be greater than zero.'},totalFeedCost:{required:'Total feed cost is required',number:'Total feed cost must be a number',min:'Total feed cost should be zero or greater.'}},formatters:{totalFeedCost:function(a){return Q(a)},feedCostPerWeight:function(a){return Q(a)},feedCostPerDay:function(a){return Q(a)}}},aL={birthingDateForm:aw,breedingDateForm:ax,daysOnFeedForm:ay,adjustedBirthWeightForm:az,averageDailyGainForm:aA,adjustedWeaningWeightForm:aB,adjustedYearlingWeightForm:aC,deathLossForm:aD,weightGainForm:aE,birthingSeasonForm:aF,weightWeanedForm:aG,birthingPercentageForm:aH,weaningPercentageForm:aI,cattleReplacementsNeededForm:aJ,feedCostForm:aK},aM=X('app'),aN=aM.CalculatorForm,aO=Z('app'),aP=aO.CalculatorResults,aQ=Object.keys(aL).reduce(function(a,b){a.push({name:aL[b].name,form:aL[b]});return a},[]);console.log('form',aQ);var aR=function a(){var b=this;this.links=aQ.map(function(a){return I('a.app-calc-link',{textContent:a.name,onclick:function(){return b.setForm(a.form)}})});this.el=I('.app',[this.formEl=I('.form-wrapper')].concat(this.links));this.data={}};aR.prototype.setForm=function b(a){var c=this;this.currentForm=a;var d=[this.form=new aN(a).listen('submit',function(a,b){c.results.update({results:a})}).listen('cancel',function(a){a();c.results.update({reset:!0})}).header(I('h1.header',("🐮 "+a.name))).build({cancelText:'Reset',submitText:'Calculate'}),this.results=new aP(a).showInputs().exclude('calculated')];J(this.formEl,d)};aR.prototype.update=function b(a){this.data=a};var aS=function a(){this.data={}};aS.prototype.get=function b(a){if(!a){return this.data}var c=a.split('.'),d=this.data;for(var e=0;e<c.length;e++){var f=c[e];if(f in d)d=d[f];else{return}}return d};aS.prototype.set=function c(a,b){var d=a.split('.'),e=this.data=Object.assign({},this.data);for(var f=0;f<d.length;f++){var g=d[f];f===d.length-1?(e[g]=b):(e=e[g]=Object.assign({},e[g]))}};var aT=function(a){var b=new aS(),c;L(a,{hello:function b(a){d('hello.subject',a)}});var d=function(d,e){b.set(d,e);c||(c=window.requestAnimationFrame(function(){c=!1;a.update(b.get())}))}},aU=new aR();aT(aU);q(document.body,aU)}()